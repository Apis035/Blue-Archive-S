<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<event category="CREATE" id="0">
  <actions>
    <action id="603" library="1">
      <!--action name: Code-->
      <kind>CODE</kind>
      <allowRelative>false</allowRelative>
      <question>false</question>
      <canApplyTo>true</canApplyTo>
      <actionType>CODE</actionType>
      <functionName/>
      <relative>false</relative>
      <not>false</not>
      <appliesTo>.self</appliesTo>
      <arguments>
        <argument kind="STRING">//Cache scene resources
bgList  = ds_map_create()
bgmList = ds_map_create()
sfxList = ds_map_create()
voiList = ds_map_create()

//Character list
charName = ds_map_create()
charAffi = ds_map_create()
charBody = ds_map_create()
charFace = ds_map_create()
charHalo = ds_map_create()
charExtr = ds_map_create()
charExpr = ds_map_create()
charList()

//Preload default resource
log('Loading default resource...')
resourceLoad()

//Setup parser
log('Initializing scene parser...')
globalvar op, a1, a2, a3, label, step;
var i, j;

for (i=0; i&lt;10; i+=1) {
    for (j=0; j&lt;1000; j+=1) {
        op[i,j] = ""
        a1[i,j] = 0
        a2[i,j] = 0
        a3[i,j] = 0
    }
}

//Load scene
log('Loading scene script for ' + global.Scene + '...')
execute_string(global.Scene + '()')

//Export loaded scene into file
if global.Debug
    resourceExport()

//Setup components
log('Setting up game components...')
instance_create(x, y, Location)
instance_create(x, y, Title)
instance_create(x, y, Screen)
instance_create(x, y, Choice)
instance_create(x, y, Textbox)
instance_create(x, y, BG)

//Begin scene parsing
label   = 0
step    = 1
wait    = 0
pending = false
gameEnd = false

log('Starting scene.' + newline + '------------------------------------------------------------')

</argument>
      </arguments>
    </action>
  </actions>
</event>
